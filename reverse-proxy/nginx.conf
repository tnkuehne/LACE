events {}

http {
    # https://svelte.dev/docs/kit/adapter-node#Deploying-Compressing-responses
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_proxied any;

    # Redirect HTTP to HTTPS for old domains
    server {
        listen 80;
        server_name lace.sebis.cit.tum.de sebisvm5.cit.tum.de;
        return 301 https://privacyeducation.tech$request_uri;
    }

    # Redirect HTTPS old domains to new domain
    server {
        listen 443 ssl;
        server_name lace.sebis.cit.tum.de sebisvm5.cit.tum.de;

        # the sym link wasn't working, so we have to hardcode the path
        ssl_certificate /var/lib/rbg-cert/2024-06-25T14:37:17+02:00/host:f:sebisvm5.cit.tum.de.fullchain.pem;
        ssl_certificate_key /var/lib/rbg-cert/2024-06-25T14:37:17+02:00/host:f:sebisvm5.cit.tum.de.privkey.pem;
        ssl_trusted_certificate /var/lib/rbg-cert/2024-06-25T14:37:17+02:00/host:f:sebisvm5.cit.tum.de.chain.pem;

        return 301 https://privacyeducation.tech$request_uri;
    }

    # Main server block for new domain
    server {
        listen 80;
        server_name privacyeducation.tech;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name privacyeducation.tech;

        # don't expose nginx version
        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/privacyeducation.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/privacyeducation.tech/privkey.pem;

        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        add_header Strict-Transport-Security "max-age=63072000" always;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;

        location / {
            proxy_pass http://web:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # https://svelte.dev/docs/kit/adapter-node#Environment-variables-ADDRESSHEADER-and-XFFDEPTH
        }

        location /cms/ {
            # the next line is a work around https://github.com/directus/directus/discussions/4480
            rewrite ^/cms/(.*)$ /$1 break;
            proxy_pass http://cms:8055/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /staging/ {
            # so not everyone can access the staging area
            auth_basic "Restricted Staging Area";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://web-staging:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
